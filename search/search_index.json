{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Librer\u00eda Matem\u00e1tica","text":"<p>Este proyecto incluye una librer\u00eda matem\u00e1tica llamada <code>maths</code> desarrollada como parte de la pr\u00e1ctica. La librer\u00eda ha sido integrada en el repositorio y documentada con MkDocs usando el tema materialize.</p>"},{"location":"#funciones-disponibles","title":"Funciones disponibles","text":"<p>La librer\u00eda contiene cuatro funciones principales, todas ellas capaces de recibir un n\u00famero indefinido de argumentos gracias al uso de <code>*args</code>:</p> <ul> <li><code>add(*args)</code> \u2192 Devuelve la suma de todos los n\u00fameros.</li> <li><code>subtract(*args)</code> \u2192 Resta los n\u00fameros de forma secuencial.</li> <li><code>multiply(*args)</code> \u2192 Calcula el producto de los n\u00fameros.</li> <li><code>divide(*args)</code> \u2192 Realiza divisiones de manera secuencial (con control de divisi\u00f3n entre cero).</li> </ul>"},{"location":"#ejemplos-de-uso","title":"Ejemplos de uso","text":"<pre><code>from maths import add, subtract, multiply, divide\n\nprint(add(2, 3, 5))              # 10\nprint(subtract(100, 20, 30, 40)) # 10\nprint(multiply(2, 3, 4))         # 24\nprint(divide(100, 2, 5))         # 10.0\n</code></pre>"},{"location":"#estructura-de-la-libreria","title":"Estructura de la librer\u00eda","text":"<pre><code>maths/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 add.py\n\u251c\u2500\u2500 subtract.py\n\u251c\u2500\u2500 multiply.py\n\u2514\u2500\u2500 divide.py\n</code></pre>"},{"location":"proceso/","title":"Proceso de creaci\u00f3n con MkDocs","text":""},{"location":"proceso/#1-instalacion-de-mkdocs","title":"1. Instalaci\u00f3n de MkDocs","text":"<p>Comando usado:</p> <pre><code>pip install mkdocs\n</code></pre> <p>Resultado: Se instal\u00f3 MkDocs en mi entorno virtual correctamente.</p> <p>Comprobaci\u00f3n de la instalaci\u00f3n:</p> <pre><code>mkdocs --version\n</code></pre>"},{"location":"proceso/#2-creacion-del-proyecto-base","title":"2. Creaci\u00f3n del proyecto base","text":"<p>Comando usado:</p> <pre><code>mkdocs new .\n</code></pre> <p>Resultado: Se gener\u00f3 el archivo <code>mkdocs.yml</code> y la carpeta <code>docs/</code> con el archivo inicial <code>index.md</code>.</p>"},{"location":"proceso/#3-creacion-de-una-nueva-pagina","title":"3. Creaci\u00f3n de una nueva p\u00e1gina","text":"<p>En la carpeta <code>docs/</code> cre\u00e9 un nuevo archivo:</p> <pre><code>proceso.md\n</code></pre> <p>Resultado: Ahora tengo dos p\u00e1ginas en la documentaci\u00f3n: <code>index.md</code> y <code>proceso.md</code>.</p>"},{"location":"proceso/#4-configuracion-de-la-navegacion","title":"4. Configuraci\u00f3n de la navegaci\u00f3n","text":"<p>Archivo editado: <code>mkdocs.yml</code></p> <p>Configuraci\u00f3n a\u00f1adida:</p> <pre><code>site_name: Documentaci\u00f3n de Alejandro\n\nnav:\n  - Inicio: index.md\n  - Proceso: proceso.md\n</code></pre> <p>Resultado: Al recargar el servidor se muestran en la barra de navegaci\u00f3n las dos p\u00e1ginas: Inicio y Proceso.</p>"},{"location":"proceso/#5-servir-la-documentacion-en-local","title":"5. Servir la documentaci\u00f3n en local","text":"<p>Comando usado:</p> <pre><code>mkdocs serve\n</code></pre> <p>Resultado: El servidor se levant\u00f3 en <code>http://127.0.0.1:8000</code> y pude ver la documentaci\u00f3n funcionando con las dos p\u00e1ginas.</p>"},{"location":"proceso/#6-subida-del-proyecto-a-github","title":"6. Subida del proyecto a GitHub","text":"<p>Comando usado para crear el README y hacer el primer commit:</p> <pre><code>echo \"# alejandro-documentacion\" &gt;&gt; README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\n</code></pre> <p>Resultado: Se cre\u00f3 el archivo <code>README.md</code>, se inicializ\u00f3 el repositorio Git en local y se hizo el primer commit.</p> <p>Comando usado para crear la rama principal y enlazar el remoto:</p> <pre><code>git branch -M main\ngit remote add origin https://github.com/alepe03/alejandro-documentacion.git\n</code></pre> <p>Resultado: El repositorio local qued\u00f3 enlazado con el remoto en GitHub en la rama <code>main</code>.</p> <p>Comando usado para subir el commit inicial:</p> <pre><code>git push -u origin main\n</code></pre> <p>Resultado: El proyecto se subi\u00f3 correctamente a GitHub en la rama <code>main</code>.</p>"},{"location":"proceso/#7-anadir-el-proyecto-de-mkdocs-al-repositorio","title":"7. A\u00f1adir el proyecto de MkDocs al repositorio","text":"<p>Comandos usados:</p> <pre><code>git add .\ngit commit -m \"docs: a\u00f1ade estructura MkDocs (mkdocs.yml, docs/)\"\ngit push\n</code></pre> <p>Resultado: Se a\u00f1adieron los archivos de MkDocs (<code>mkdocs.yml</code>, <code>docs/index.md</code>, <code>docs/proceso.md</code>, etc.) al repositorio remoto.</p>"},{"location":"proceso/#8-publicacion-en-github-pages","title":"8. Publicaci\u00f3n en GitHub Pages","text":"<p>Comando usado para generar y desplegar el sitio:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> <p>Resultado: MkDocs compil\u00f3 el sitio, gener\u00f3 la carpeta <code>site/</code> y public\u00f3 el contenido en la rama <code>gh-pages</code> del repositorio.</p>"},{"location":"proceso/#9-activacion-de-github-pages","title":"9. Activaci\u00f3n de GitHub Pages","text":"<p>En GitHub, entr\u00e9 a Settings \u2192 Pages. Seleccion\u00e9 como Source la rama <code>gh-pages</code> y carpeta <code>/ (root)</code>. Guard\u00e9 los cambios.  </p> <p>Resultado: GitHub Pages qued\u00f3 activado y me proporcion\u00f3 la URL p\u00fablica del sitio.</p> <p>URL de la documentaci\u00f3n: \ud83d\udc49 https://alepe03.github.io/alejandro-documentacion/</p>"},{"location":"proceso/#10-verificacion-final","title":"10. Verificaci\u00f3n final","text":"<p>Abr\u00ed la URL p\u00fablica en el navegador y comprob\u00e9 que la documentaci\u00f3n generada con MkDocs est\u00e1 visible online.</p>"},{"location":"proceso/#11-aplicacion-de-una-plantilla-estetica-material-for-mkdocs","title":"11. Aplicaci\u00f3n de una plantilla est\u00e9tica (Material for MkDocs)","text":""},{"location":"proceso/#111-instalacion-del-tema-material","title":"11.1 Instalaci\u00f3n del tema Material","text":"<p>Comando usado:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>a\u00f1adimos el tema en mkdocs.yml:</p> <pre><code>site_name: Documentaci\u00f3n de Alejandro\n\nnav:\n  - Inicio: index.md\n  - Proceso: proceso.md\n\ntheme:\n  name: material\n</code></pre> <p>Resultado: Al volver a ejecutar el servidor con:</p> <pre><code>mkdocs serve\n</code></pre> <p>la documentaci\u00f3n cambi\u00f3 autom\u00e1ticamente a la est\u00e9tica del tema Material, mostrando un dise\u00f1o m\u00e1s moderno y visual.</p>"},{"location":"proceso/#12-uso-de-docker-para-la-documentacion","title":"12. Uso de Docker para la documentaci\u00f3n","text":""},{"location":"proceso/#121-creacion-del-dockerfile","title":"12.1 Creaci\u00f3n del Dockerfile","text":"<p>Cre\u00e9 un archivo llamado <code>Dockerfile</code> en la ra\u00edz del proyecto con el siguiente contenido:</p> <pre><code>FROM python:3.12-slim\n\n# Variables de entorno para que Python no genere archivos innecesarios\nENV PIP_DISABLE_PIP_VERSION_CHECK=1     PYTHONDONTWRITEBYTECODE=1     PYTHONUNBUFFERED=1\n\n# Instalar MkDocs + Material + ghp-import\nRUN pip install --no-cache-dir mkdocs mkdocs-material ghp-import\n\n# Directorio de trabajo dentro del contenedor\nWORKDIR /site\n\n# Exponer el puerto 8000\nEXPOSE 8000\n\n# Comando por defecto para levantar el servidor\nCMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n</code></pre> <p>Resultado: Dockerfile preparado para construir una imagen con Python, MkDocs y el tema Material.</p>"},{"location":"proceso/#122-creacion-del-archivo-docker-composeyml","title":"12.2 Creaci\u00f3n del archivo docker-compose.yml","text":"<p>Cre\u00e9 un archivo <code>docker-compose.yml</code> con el siguiente contenido:</p> <pre><code>services:\n  mkdocs:\n    build: .\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./:/site\n    command: mkdocs serve -a 0.0.0.0:8000\n</code></pre> <p>Resultado: Configuraci\u00f3n lista para levantar el servidor de MkDocs de forma sencilla con un solo comando.</p>"},{"location":"proceso/#123-construccion-de-la-imagen","title":"12.3 Construcci\u00f3n de la imagen","text":"<p>Comando usado:</p> <pre><code>docker compose build\n</code></pre> <p>Resultado: Se construy\u00f3 la imagen de Docker con Python 3.12, MkDocs, Material y ghp-import. La consola mostr\u00f3 la descarga de la imagen base y la instalaci\u00f3n de dependencias.</p>"},{"location":"proceso/#124-levantar-el-servidor-dentro-del-contenedor","title":"12.4 Levantar el servidor dentro del contenedor","text":"<p>Comando usado:</p> <pre><code>docker compose up\n</code></pre> <p>Resultado: El sitio de documentaci\u00f3n se sirvi\u00f3 correctamente en <code>http://localhost:8000</code>, ejecut\u00e1ndose dentro de un contenedor Docker.</p>"},{"location":"proceso/#125-parar-y-limpiar-contenedores","title":"12.5 Parar y limpiar contenedores","text":"<p>Comandos usados:</p> <pre><code># detener el servidor\nCTRL + C\n\n# eliminar contenedores y red\ndocker compose down\n</code></pre> <p>Resultado: El contenedor se detuvo y se liberaron los recursos de Docker.</p>"},{"location":"proceso/#13-operaciones-avanzadas-en-git-ejecutadas","title":"13. Operaciones avanzadas en Git (ejecutadas)","text":"<p>Estas operaciones las realic\u00e9 en el repositorio <code>alejandro-documentacion</code>.</p> <p>iniciar bisect</p> <pre><code>git bisect start\n</code></pre> <p>marcar el commit actual como \"malo\"</p> <pre><code>git bisect bad\n</code></pre> <p>marcar un commit antiguo donde todo funcionaba como \"bueno\"</p> <pre><code>git bisect good &lt;...&gt;\n</code></pre> <p>Git me lleva a un punto intermedio; prob\u00e9 el sitio (mkdocs serve)</p> <pre><code>git bisect bad   **fallaba**\n</code></pre> <p>repet\u00ed el proceso hasta que Git dio el primer commit malo</p> <p>al terminar:</p> <pre><code>git bisect reset\n</code></pre>"},{"location":"proceso/#14-seguridad-en-los-sistemas-de-control-de-versiones","title":"14. Seguridad en los sistemas de control de versiones","text":""},{"location":"proceso/#141-uso-de-gitignore-para-evitar-subir-archivos-innecesarios","title":"14.1 Uso de <code>.gitignore</code> para evitar subir archivos innecesarios","text":"<p>Cre\u00e9 un archivo <code>.gitignore</code> en la ra\u00edz del proyecto con el siguiente contenido:</p> <pre><code>site/\n__pycache__/\n.DS_Store\n.env\n</code></pre>"},{"location":"proceso/#15-integracion-continua-cicd-con-github-actions","title":"15. Integraci\u00f3n continua (CI/CD) con GitHub Actions","text":""},{"location":"proceso/#151-creacion-del-workflow-de-despliegue-automatico","title":"15.1 Creaci\u00f3n del workflow de despliegue autom\u00e1tico","text":"<p>Cre\u00e9 el archivo <code>.github/workflows/mkdocs.yml</code> con el contenido:</p> <pre><code>name: Build &amp; Deploy MkDocs\n\non:\n  push:\n    branches: [ main ]\n\npermissions:\n  contents: write\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout c\u00f3digo\n        uses: actions/checkout@v4\n\n      - name: Configurar Python\n        uses: actions/setup-python@v5\n        with:\n          python-version: '3.12'\n\n      - name: Instalar dependencias\n        run: pip install mkdocs mkdocs-material ghp-import\n\n      - name: Compilar documentaci\u00f3n\n        run: mkdocs build --strict\n\n      - name: Desplegar en GitHub Pages\n        run: mkdocs gh-deploy --force\n</code></pre> <p>Resultado: En cada push a main, GitHub Actions compila la documentaci\u00f3n y publica autom\u00e1ticamente en la rama gh-pages.</p>"},{"location":"proceso/#16-desarrollo-y-documentacion-de-la-libreria-matematica","title":"16. Desarrollo y documentaci\u00f3n de la librer\u00eda matem\u00e1tica","text":""},{"location":"proceso/#161-integracion-de-la-libreria","title":"16.1 Integraci\u00f3n de la librer\u00eda","text":"<p>Integr\u00e9 la carpeta <code>maths/</code> del repositorio de ejemplo <code>sphinx_basics</code> dentro de mi proyecto <code>alejandro-documentacion</code>. La librer\u00eda contiene cuatro funciones matem\u00e1ticas b\u00e1sicas: <code>add</code>, <code>subtract</code>, <code>multiply</code> y <code>divide</code>.</p>"},{"location":"proceso/#162-cambios-realizados","title":"16.2 Cambios realizados","text":"<ul> <li>Todas las funciones fueron modificadas para aceptar un n\u00famero indefinido de argumentos mediante <code>*args</code>.</li> <li>La l\u00f3gica de cada funci\u00f3n se adapt\u00f3 al nuevo esquema:</li> <li><code>add</code> ahora suma todos los argumentos.</li> <li><code>subtract</code> resta de manera secuencial.</li> <li><code>multiply</code> multiplica todos los valores.</li> <li><code>divide</code> divide de forma secuencial, comprobando que no se divida entre cero.</li> <li>Los docstrings fueron actualizados para documentar el uso de <code>*args</code> y proporcionar ejemplos de uso.</li> </ul>"},{"location":"proceso/#163-ejemplos-documentados","title":"16.3 Ejemplos documentados","text":"<p>Los docstrings incluyen ejemplos claros:</p> <pre><code>&gt;&gt;&gt; add(2, 3, 5)\n10\n\n&gt;&gt;&gt; subtract(100, 20, 30, 40)\n10\n\n&gt;&gt;&gt; multiply(2, 3, 4)\n24\n\n&gt;&gt;&gt; divide(100, 2, 5)\n10.0\n</code></pre>"},{"location":"proceso/#164-pruebas-realizadas","title":"16.4 Pruebas realizadas","text":"<p>Prob\u00e9 las funciones desde la consola de Python:</p> <pre><code>from maths import add, subtract, multiply, divide\n\nprint(add(2, 3, 5))             # 10\nprint(subtract(100, 20, 30, 40)) # 10\nprint(multiply(2, 3, 4))         # 24\nprint(divide(100, 2, 5))         # 10.0\n</code></pre> <p>Resultado: Todas las funciones funcionan correctamente con m\u00faltiples argumentos y los ejemplos documentados son congruentes con los cambios realizados.</p>"},{"location":"proceso/#17-pruebas-de-la-libreria-matematica","title":"17. Pruebas de la librer\u00eda matem\u00e1tica","text":""},{"location":"proceso/#171-creacion-de-un-script-de-pruebas","title":"17.1 Creaci\u00f3n de un script de pruebas","text":"<p>Para verificar que las funciones de la librer\u00eda <code>maths</code> funcionan correctamente, cre\u00e9 el archivo <code>test_math.py</code>con el siguiente contenido:</p> <pre><code>import sys, os\nsys.path.append(os.getcwd())\n\nfrom maths import add, subtract, multiply, divide\n\nprint(\"add(2, 3, 5) =\", add(2, 3, 5))                   # 10\nprint(\"subtract(100, 20, 30, 40) =\", subtract(100, 20, 30, 40))  # 10\nprint(\"multiply(2, 3, 4) =\", multiply(2, 3, 4))         # 24\nprint(\"divide(100, 2, 5) =\", divide(100, 2, 5))         # 10.0\n</code></pre>"},{"location":"proceso/#182-ejecucion-de-las-pruebas","title":"18.2 Ejecuci\u00f3n de las pruebas","text":"<p>Ejecut\u00e9 el script con el comando:</p> <pre><code>python3 test_math.py\n</code></pre> <p>El resultado obtenido fue el esperado:</p> <pre><code>add(2, 3, 5) = 10\nsubtract(100, 20, 30, 40) = 10\nmultiply(2, 3, 4) = 24\ndivide(100, 2, 5) = 10.0\n</code></pre>"}]}